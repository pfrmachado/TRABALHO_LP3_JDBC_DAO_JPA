/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Classes.Estoque;
import DAO.EstoqueDAO;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Pedro
 */
public class InterfaceForm extends javax.swing.JFrame {
    Estoque estoque;
    EstoqueDAO estoqueDAO = EstoqueDAO.getInstance();
    Long idSelec;

    /**
     * Creates new form InterfaceForm
     */
    public InterfaceForm() {
        initComponents();
        estoque = new Estoque();
        atualizaTabelaProdutos();
        btnExcluir.setEnabled(false);
        btnDesativarFilial.setEnabled(false);
        btnAlterarRegistro.setEnabled(false);
        btnTransportar.setEnabled(false);
        btnCancelarAlteracao.setEnabled(false);
    }

    public void atualizaTabelaProdutos()
    {
        DefaultTableModel tm = (DefaultTableModel) tblListaProdutos.getModel();
        for (int i = tm.getRowCount() - 1; i >= 0; i--) {
            tm.removeRow(i);
        }
        try {
            List<Estoque> lista = EstoqueDAO.getInstance().getAllEstoques();
            if(lista.size() > 0)
            {
                for (Estoque e : lista) {
                    tm.addRow(new Object[]{
                                e.getId(),
                                e.getProduto(),
                                e.getFilial(),
                                e.getQuantidade()
                            });
                }
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Nenhum registro encontrado", "Nenhum registro.", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Não foi possivel lista os registros", "Erro de Listagem", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(InterfaceForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void limpaCampos()
    {
        txtFilial.setText("");
        txtNomeProduto.setText("");
        txtQuantidade.setText("");
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblNomeProduto = new javax.swing.JLabel();
        txtNomeProduto = new javax.swing.JTextField();
        lblFilial = new javax.swing.JLabel();
        txtFilial = new javax.swing.JTextField();
        lblQuantidade = new javax.swing.JLabel();
        txtQuantidade = new javax.swing.JTextField();
        btnCadastrar = new javax.swing.JButton();
        spr1 = new javax.swing.JSeparator();
        scrptblListaProdutos = new javax.swing.JScrollPane();
        tblListaProdutos = new javax.swing.JTable();
        btnExcluir = new javax.swing.JButton();
        btnAlterarRegistro = new javax.swing.JButton();
        btnCancelarAlteracao = new javax.swing.JButton();
        lblBuscaProduto = new javax.swing.JLabel();
        txtBuscaProduto = new javax.swing.JTextField();
        lblBuscaFilial = new javax.swing.JLabel();
        txtBuscaFilial = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        btnBuscarTodos = new javax.swing.JButton();
        btnTransportar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        btnDesativarFilial = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblNomeProduto.setText("Nome do produto");

        txtNomeProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeProdutoActionPerformed(evt);
            }
        });
        txtNomeProduto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNomeProdutoFocusGained(evt);
            }
        });

        lblFilial.setText("Filial");

        txtFilial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFilialActionPerformed(evt);
            }
        });
        txtFilial.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtFilialFocusGained(evt);
            }
        });

        lblQuantidade.setText("Quantidade");

        txtQuantidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQuantidadeActionPerformed(evt);
            }
        });
        txtQuantidade.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtQuantidadeFocusGained(evt);
            }
        });

        btnCadastrar.setText("Cadastrar");
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });

        tblListaProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nome do produto", "Filial", "Quantidade"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblListaProdutos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblListaProdutosMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tblListaProdutosMouseEntered(evt);
            }
        });
        tblListaProdutos.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tblListaProdutosFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tblListaProdutosFocusLost(evt);
            }
        });
        scrptblListaProdutos.setViewportView(tblListaProdutos);

        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnAlterarRegistro.setText("Alterar registro selecionado");
        btnAlterarRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarRegistroActionPerformed(evt);
            }
        });

        btnCancelarAlteracao.setText("Cancelar alteração");
        btnCancelarAlteracao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarAlteracaoActionPerformed(evt);
            }
        });

        lblBuscaProduto.setText("Nome do produto para busca");

        lblBuscaFilial.setText("Nome da filial para busca");

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnBuscarTodos.setText("Buscar todos");
        btnBuscarTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarTodosActionPerformed(evt);
            }
        });

        btnTransportar.setText("Transportar");
        btnTransportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTransportarActionPerformed(evt);
            }
        });

        jButton1.setText("ATUALIZAR TABELA");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnDesativarFilial.setText("Desativar filial selecionada");
        btnDesativarFilial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDesativarFilialActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblNomeProduto)
                        .addGap(98, 98, 98)
                        .addComponent(lblFilial)
                        .addGap(160, 160, 160)
                        .addComponent(lblQuantidade))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtNomeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtFilial, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(btnCadastrar))
                    .addComponent(spr1, javax.swing.GroupLayout.PREFERRED_SIZE, 519, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblBuscaProduto)
                        .addGap(41, 41, 41)
                        .addComponent(lblBuscaFilial))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtBuscaProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(txtBuscaFilial, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnBuscar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnBuscarTodos))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(scrptblListaProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, 519, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(btnExcluir)
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnAlterarRegistro)
                                .addComponent(btnDesativarFilial))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnCancelarAlteracao)
                            .addGap(18, 18, 18)
                            .addComponent(btnTransportar))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(204, 204, 204))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNomeProduto)
                    .addComponent(lblFilial)
                    .addComponent(lblQuantidade))
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCadastrar)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNomeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFilial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(11, 11, 11)
                .addComponent(spr1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(lblBuscaProduto))
                    .addComponent(lblBuscaFilial))
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(txtBuscaProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(txtBuscaFilial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnBuscar)
                        .addComponent(btnBuscarTodos)))
                .addGap(11, 11, 11)
                .addComponent(scrptblListaProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnExcluir)
                        .addComponent(btnAlterarRegistro))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnCancelarAlteracao)
                        .addComponent(btnTransportar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addComponent(btnDesativarFilial)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNomeProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeProdutoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeProdutoActionPerformed

    private void txtNomeProdutoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNomeProdutoFocusGained
        // TODO add your handling code here:
        btnExcluir.setEnabled(false);
        btnDesativarFilial.setEnabled(false);
        btnAlterarRegistro.setEnabled(false);
        btnTransportar.setEnabled(false);
    }//GEN-LAST:event_txtNomeProdutoFocusGained

    private void txtFilialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFilialActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFilialActionPerformed

    private void txtFilialFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFilialFocusGained
        // TODO add your handling code here:
        btnExcluir.setEnabled(false);
        btnDesativarFilial.setEnabled(false);
        btnAlterarRegistro.setEnabled(false);
        btnTransportar.setEnabled(false);
    }//GEN-LAST:event_txtFilialFocusGained

    private void txtQuantidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQuantidadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQuantidadeActionPerformed

    private void txtQuantidadeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtQuantidadeFocusGained
        // TODO add your handling code here:
        btnExcluir.setEnabled(false);
        btnDesativarFilial.setEnabled(false);
        btnAlterarRegistro.setEnabled(false);
        btnTransportar.setEnabled(false);
    }//GEN-LAST:event_txtQuantidadeFocusGained

    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarActionPerformed
        // TODO add your handling code here:
        try {
            switch (btnCadastrar.getText()) {
                case "Cadastrar":
                    //infelizmente nao implementei a chave composta, logo tive q fazer essa condição
                    Estoque e = estoqueDAO.getByProdutoByFilial(txtNomeProduto.getText(), txtFilial.getText());
                    if(e == null)
                    {
                        Estoque newE = new Estoque();
                        newE.setProduto(txtNomeProduto.getText());
                        newE.setFilial(txtFilial.getText());
                        newE.setQuantidade(Integer.parseInt(txtQuantidade.getText()));
                        estoqueDAO.criarEstoque(newE);
                        JOptionPane.showMessageDialog(null, "Produto cadastrado.", "Cadastro de produto.", JOptionPane.DEFAULT_OPTION);
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(null, "Produto já cadastrado.", "Produto já cadastrado.", JOptionPane.DEFAULT_OPTION);
                    }
                    break;
                case "Atualizar":
                    estoque.setProduto(txtNomeProduto.getText());
                    estoque.setFilial(txtFilial.getText());
                    estoque.setQuantidade(Integer.parseInt(txtQuantidade.getText()));
                    estoqueDAO.atualizaEstoque(idSelec, estoque);
                    btnCadastrar.setText("Cadastrar");
                    JOptionPane.showMessageDialog(null, "Produto atualizado.", "Atualização de produto", JOptionPane.DEFAULT_OPTION);
                    break;
            }
            btnExcluir.setEnabled(false);
            btnDesativarFilial.setEnabled(false);
            btnAlterarRegistro.setEnabled(false);
            btnTransportar.setEnabled(false);
            btnCancelarAlteracao.setEnabled(false);
            atualizaTabelaProdutos();
            limpaCampos();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Erro no processo.");
        }
    }//GEN-LAST:event_btnCadastrarActionPerformed

    private void tblListaProdutosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblListaProdutosMouseClicked
        // TODO add your handling code here:
        int linha = tblListaProdutos.getSelectedRow();
        idSelec = Long.parseLong(tblListaProdutos.getModel().getValueAt(linha, 0).toString());
        try {
            estoque = estoqueDAO.getById(idSelec);
            btnExcluir.setEnabled(true);
            btnDesativarFilial.setEnabled(true);
            btnAlterarRegistro.setEnabled(true);
            btnTransportar.setEnabled(true);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Não foi possivel recuperar o registro", "Erro ao buscar o registro", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(InterfaceForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tblListaProdutosMouseClicked

    private void tblListaProdutosMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblListaProdutosMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_tblListaProdutosMouseEntered

    private void tblListaProdutosFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tblListaProdutosFocusGained
        // TODO add your handling code here:
        btnExcluir.setEnabled(false);
        btnDesativarFilial.setEnabled(false);
        btnAlterarRegistro.setEnabled(false);
        btnTransportar.setEnabled(false);
    }//GEN-LAST:event_tblListaProdutosFocusGained

    private void tblListaProdutosFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tblListaProdutosFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_tblListaProdutosFocusLost

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        // TODO add your handling code here:
        try {
            estoqueDAO.excluiEstoque(estoque);
            btnExcluir.setEnabled(false);
            btnDesativarFilial.setEnabled(false);
            btnAlterarRegistro.setEnabled(false);
            btnTransportar.setEnabled(false);
            btnCancelarAlteracao.setEnabled(false);
            JOptionPane.showMessageDialog(null, "Produto excluído.", "Exclusão de produto", JOptionPane.DEFAULT_OPTION);
            atualizaTabelaProdutos();
            limpaCampos();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Não foi possivel excluir o registro", "Erro ao excluir o registro", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(InterfaceForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnAlterarRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarRegistroActionPerformed
        // TODO add your handling code here:
        txtFilial.setText(estoque.getFilial());
        txtNomeProduto.setText(estoque.getProduto());
        txtQuantidade.setText(Integer.toString(estoque.getQuantidade()));
        btnCadastrar.setText("Atualizar");
        btnCancelarAlteracao.setEnabled(true);
    }//GEN-LAST:event_btnAlterarRegistroActionPerformed

    private void btnCancelarAlteracaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarAlteracaoActionPerformed
        // TODO add your handling code here:
        btnExcluir.setEnabled(false);
        btnDesativarFilial.setEnabled(false);
        btnAlterarRegistro.setEnabled(false);
        btnTransportar.setEnabled(false);
        txtNomeProduto.grabFocus();
        txtNomeProduto.setText("");
        txtFilial.setText("");
        txtQuantidade.setText("");
        btnCadastrar.setText("Cadastrar");
        btnCancelarAlteracao.setEnabled(false);
    }//GEN-LAST:event_btnCancelarAlteracaoActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
        String produtoBusca = txtBuscaProduto.getText();
        String filialBusca = txtBuscaFilial.getText();
        if(produtoBusca.length() > 0)
        {
            if(filialBusca.length() > 0)
            {
                DefaultTableModel tm = (DefaultTableModel) tblListaProdutos.getModel();
                for (int i = tm.getRowCount() - 1; i >= 0; i--) {
                    tm.removeRow(i);
                }
                try {
                    Estoque e = estoqueDAO.getByProdutoByFilial(produtoBusca, filialBusca);
                    if(e != null)
                    {
                        tm.addRow(new Object[]{
                                        e.getId(),
                                        e.getProduto(),
                                        e.getFilial(),
                                        e.getQuantidade()
                                    });
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(null, "Não foi encontrado nenhum registro.", "Nenhum registro encontrado", JOptionPane.ERROR_MESSAGE);
                    }
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, "Não foi possivel buscar o registro", "Erro de Listagem", JOptionPane.ERROR_MESSAGE);
                    Logger.getLogger(InterfaceForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Campo filial obrigatorio para busca.", "Campo filial obrigatorio", JOptionPane.ERROR_MESSAGE);
            }
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Campo produto obrigatorio para busca.", "Campo produto obrigatorio", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnBuscarTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarTodosActionPerformed
        // TODO add your handling code here:
        atualizaTabelaProdutos();
        txtBuscaProduto.setText("");
        txtBuscaFilial.setText("");
    }//GEN-LAST:event_btnBuscarTodosActionPerformed

    private void btnTransportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTransportarActionPerformed
        try {
            // TODO add your handling code here:
            String produtoTrans[] = new String[]{idSelec.toString()};
            TransporteQuantidade.main(produtoTrans);
        } catch (Exception ex) {
            Logger.getLogger(InterfaceForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnTransportarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        atualizaTabelaProdutos();
        btnCadastrar.setEnabled(true);
        btnBuscar.setEnabled(true);
        btnBuscarTodos.setEnabled(true);
        btnExcluir.setEnabled(false);
        btnDesativarFilial.setEnabled(false);
        btnAlterarRegistro.setEnabled(false);
        btnCancelarAlteracao.setEnabled(false);
        btnTransportar.setEnabled(false);
        JOptionPane.showMessageDialog(null, "Tabela atualizada.", "Atualização da tabela.", JOptionPane.DEFAULT_OPTION);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnDesativarFilialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDesativarFilialActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            String produtoTrans[] = new String[]{idSelec.toString()};
            DesativaFilial.main(produtoTrans);
        } catch (Exception ex) {
            Logger.getLogger(InterfaceForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnDesativarFilialActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfaceForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfaceForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfaceForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfaceForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterfaceForm().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterarRegistro;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnBuscarTodos;
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JButton btnCancelarAlteracao;
    private javax.swing.JButton btnDesativarFilial;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnTransportar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel lblBuscaFilial;
    private javax.swing.JLabel lblBuscaProduto;
    private javax.swing.JLabel lblFilial;
    private javax.swing.JLabel lblNomeProduto;
    private javax.swing.JLabel lblQuantidade;
    private javax.swing.JScrollPane scrptblListaProdutos;
    private javax.swing.JSeparator spr1;
    private javax.swing.JTable tblListaProdutos;
    private javax.swing.JTextField txtBuscaFilial;
    private javax.swing.JTextField txtBuscaProduto;
    private javax.swing.JTextField txtFilial;
    private javax.swing.JTextField txtNomeProduto;
    private javax.swing.JTextField txtQuantidade;
    // End of variables declaration//GEN-END:variables
}
